// like the above test, but this time we also pass the array to a non-CVL function
rule LenInExpression2() {
    uint256[] arr;

    // XXX: in the unit test, we test for this length value to be three; 
    // then later we pick it up in the unit test by searching for the
    // `CVLEXPInstance`s generated by evald.
    // however if we `require x == 3` directly, it would get optimized away, which would
    // make us trouble (TODO: something to look into fixing, actually, then make another test for it)
    require arr.length * arr.length == 9; 

    env e;
    uint256DynamicArray(e, arr);
    assert arr.length * 2 <= 5; // we need this line because we look for a CVLExpInstance in the test .. it can fail because we have loop_iter 3
}

