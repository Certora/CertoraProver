{
    "message": {
        "text": "checkWorkOnSCVL1()",
        "arguments": [
        ]
    },
    "status": "",
    "childrenList": [
        {
            "message": {
                "text": "Global State",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
            ],
            "jumpToDefinition": null,
            "storageId": null
        },
        {
            "message": {
                "text": "rule parameters setup",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
            ],
            "jumpToDefinition": null
        },
        {
            "message": {
                "text": "Setup",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
                {
                    "message": {
                        "text": "multi contract setup",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "contract address vars initialized",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "setup read tracking instrumentation",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "last storage initialize",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "assuming contracts in scene with non-empty bytecode have EXTCODESIZE larger than zero",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "assuming address(0).code has no code deployed",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "assumptions about contracts' addresses",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "assumptions about static addresses",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "establish addresses of precompiled contracts",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "assumptions about uniqueness of contracts' addresses",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "static links",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "record starting nonces",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "cloned contracts have no balances",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "Linked immutable setup",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "Constrain immutables",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "establish equivalence of extension and base contract immutables",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                }
            ],
            "jumpToDefinition": null
        },
        {
            "message": {
                "text": "require x < 3",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
            ],
            "jumpToDefinition": {
                "file": "test.spec",
                "start": {
                    "line": 56,
                    "col": 5
                },
                "end": {
                    "line": 56,
                    "col": 19
                }
            }
        },
        {
            "message": {
                "text": "TestContract.Complex s",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
            ],
            "jumpToDefinition": {
                "file": "test.spec",
                "start": {
                    "line": 57,
                    "col": 5
                },
                "end": {
                    "line": 57,
                    "col": 28
                }
            }
        },
        {
            "message": {
                "text": "workOnSCVL(x, s.s1)",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
                {
                    "message": {
                        "text": "workOnSCVL(x='{0}', s={x='{1}', y='{2}', z1='{3}', z2='{4}', b1='{5}', x2='{6}', b2='{7}'})",
                        "arguments": [
                            {
                                "value": "0x0",
                                "values": [
                                    "0x0",
                                    "0",
                                    "0x0"
                                ],
                                "tooltip": "1st parameter",
                                "truncatable": true
                            },
                            {
                                "value": "0x5",
                                "values": [
                                    "0x5",
                                    "5",
                                    "0x5"
                                ],
                                "tooltip": "value at x",
                                "truncatable": true
                            },
                            {
                                "value": "0x8200",
                                "values": [
                                    "0x8200",
                                    "0x8200",
                                    "0x8200"
                                ],
                                "tooltip": "value at y",
                                "truncatable": true
                            },
                            {
                                "value": "0xd",
                                "values": [
                                    "0xd",
                                    "13",
                                    "0xd"
                                ],
                                "tooltip": "value at z1",
                                "truncatable": true
                            },
                            {
                                "value": "0x7",
                                "values": [
                                    "0x7",
                                    "7",
                                    "0x7"
                                ],
                                "tooltip": "value at z2",
                                "truncatable": true
                            },
                            {
                                "value": "false",
                                "values": [
                                    "false"
                                ],
                                "tooltip": "value at b1",
                                "truncatable": false
                            },
                            {
                                "value": "0xa",
                                "values": [
                                    "0xa",
                                    "10",
                                    "0xa"
                                ],
                                "tooltip": "value at x2",
                                "truncatable": true
                            },
                            {
                                "value": "false",
                                "values": [
                                    "false"
                                ],
                                "tooltip": "value at b2",
                                "truncatable": false
                            }
                        ]
                    },
                    "status": "",
                    "childrenList": [
                        {
                            "message": {
                                "text": "require s.b1 == (x > 3)",
                                "arguments": [
                                ]
                            },
                            "status": "",
                            "childrenList": [
                            ],
                            "jumpToDefinition": {
                                "file": "test.spec",
                                "start": {
                                    "line": 16,
                                    "col": 5
                                },
                                "end": {
                                    "line": 16,
                                    "col": 29
                                }
                            }
                        }
                    ],
                    "jumpToDefinition": {
                        "file": "test.spec",
                        "start": {
                            "line": 58,
                            "col": 5
                        },
                        "end": {
                            "line": 58,
                            "col": 24
                        }
                    }
                }
            ],
            "jumpToDefinition": {
                "file": "test.spec",
                "start": {
                    "line": 58,
                    "col": 5
                },
                "end": {
                    "line": 58,
                    "col": 25
                }
            }
        },
        {
            "message": {
                "text": "assert s.s1.b1",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
                {
                    "message": {
                        "text": "Global State",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null,
                    "storageId": null
                }
            ],
            "jumpToDefinition": {
                "file": "test.spec",
                "start": {
                    "line": 59,
                    "col": 5
                },
                "end": {
                    "line": 59,
                    "col": 20
                }
            }
        }
    ],
    "jumpToDefinition": null
}