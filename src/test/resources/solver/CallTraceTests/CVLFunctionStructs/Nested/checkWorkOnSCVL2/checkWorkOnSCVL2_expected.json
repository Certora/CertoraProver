{
    "message": {
        "text": "checkWorkOnSCVL2()",
        "arguments": [
        ]
    },
    "status": "",
    "childrenList": [
        {
            "message": {
                "text": "Global State",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
            ],
            "jumpToDefinition": null,
            "storageId": null
        },
        {
            "message": {
                "text": "Setup",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
                {
                    "message": {
                        "text": "multi contract setup",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "rule parameters setup",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "contract address vars initialized",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "setup read tracking instrumentation",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "last storage initialize",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "assuming contracts in scene with non-empty bytecode have EXTCODESIZE larger than zero",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "assuming address(0).code has no code deployed",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "assumptions about contracts' addresses",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "assumptions about static addresses",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "establish addresses of precompiled contracts",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "assumptions about uniqueness of contracts' addresses",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "static links",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "record starting nonces",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "cloned contracts have no balances",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "Linked immutable setup",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "Constrain immutables",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "establish equivalence of extension and base contract immutables",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                }
            ],
            "jumpToDefinition": null
        },
        {
            "message": {
                "text": "require x < 3",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
            ],
            "jumpToDefinition": {
                "file": "test.spec",
                "start": {
                    "line": 63,
                    "col": 5
                },
                "end": {
                    "line": 63,
                    "col": 19
                }
            }
        },
        {
            "message": {
                "text": "TestContract.Complex s",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
            ],
            "jumpToDefinition": {
                "file": "test.spec",
                "start": {
                    "line": 64,
                    "col": 5
                },
                "end": {
                    "line": 64,
                    "col": 28
                }
            }
        },
        {
            "message": {
                "text": "workOnSCVL(x, s.s2)",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
                {
                    "message": {
                        "text": "workOnSCVL(x='{0}', s={x='{1}', y='{2}', z1='{3}', z2='{4}', b1='{5}', x2='{6}', b2='{7}'})",
                        "arguments": [
                            {
                                "value": "2",
                                "values": [
                                    "2",
                                    "2",
                                    "0x2"
                                ],
                                "tooltip": "1st parameter"
                            },
                            {
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff (MAX_UINT256)",
                                "values": [
                                    "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff (MAX_UINT256)",
                                    "115792089237316195423570985008687907853269984665640564039457584007913129639935",
                                    "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                ],
                                "tooltip": "value at x"
                            },
                            {
                                "value": "0xffffffffffffffffffffffffffffffffffffffff",
                                "values": [
                                    "0xffffffffffffffffffffffffffffffffffffffff"
                                ],
                                "tooltip": "value at y"
                            },
                            {
                                "value": "255 (MAX_UINT8)",
                                "values": [
                                    "255 (MAX_UINT8)",
                                    "255",
                                    "0xff"
                                ],
                                "tooltip": "value at z1"
                            },
                            {
                                "value": "255 (MAX_UINT8)",
                                "values": [
                                    "255 (MAX_UINT8)",
                                    "255",
                                    "0xff"
                                ],
                                "tooltip": "value at z2"
                            },
                            {
                                "value": "false",
                                "values": [
                                    "false"
                                ],
                                "tooltip": "value at b1"
                            },
                            {
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff (MAX_UINT256)",
                                "values": [
                                    "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff (MAX_UINT256)",
                                    "115792089237316195423570985008687907853269984665640564039457584007913129639935",
                                    "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                ],
                                "tooltip": "value at x2"
                            },
                            {
                                "value": "false",
                                "values": [
                                    "false"
                                ],
                                "tooltip": "value at b2"
                            }
                        ]
                    },
                    "status": "",
                    "childrenList": [
                        {
                            "message": {
                                "text": "require s.b1 == (x > 3)",
                                "arguments": [
                                ]
                            },
                            "status": "",
                            "childrenList": [
                            ],
                            "jumpToDefinition": {
                                "file": "test.spec",
                                "start": {
                                    "line": 16,
                                    "col": 5
                                },
                                "end": {
                                    "line": 16,
                                    "col": 29
                                }
                            }
                        }
                    ],
                    "jumpToDefinition": {
                        "file": "test.spec",
                        "start": {
                            "line": 65,
                            "col": 5
                        },
                        "end": {
                            "line": 65,
                            "col": 24
                        }
                    }
                }
            ],
            "jumpToDefinition": {
                "file": "test.spec",
                "start": {
                    "line": 65,
                    "col": 5
                },
                "end": {
                    "line": 65,
                    "col": 25
                }
            }
        },
        {
            "message": {
                "text": "assert s.s2.b1",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
                {
                    "message": {
                        "text": "Global State",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null,
                    "storageId": null
                }
            ],
            "jumpToDefinition": {
                "file": "test.spec",
                "start": {
                    "line": 66,
                    "col": 5
                },
                "end": {
                    "line": 66,
                    "col": 20
                }
            }
        }
    ],
    "jumpToDefinition": null
}