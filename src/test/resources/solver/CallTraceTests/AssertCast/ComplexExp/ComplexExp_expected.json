{
    "message": {
        "text": "ComplexExp()",
        "arguments": [
        ]
    },
    "status": "",
    "childrenList": [
        {
            "message": {
                "text": "Global State",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
            ],
            "jumpToDefinition": null,
            "storageId": null
        },
        {
            "message": {
                "text": "rule parameters setup",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
            ],
            "jumpToDefinition": null
        },
        {
            "message": {
                "text": "Setup",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
                {
                    "message": {
                        "text": "multi contract setup",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "contract address vars initialized",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "setup read tracking instrumentation",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "last storage initialize",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "assuming contracts in scene with non-empty bytecode have EXTCODESIZE larger than zero",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "assuming address(0).code has no code deployed",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "assumptions about contracts' addresses",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "assumptions about static addresses",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "establish addresses of precompiled contracts",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "assumptions about uniqueness of contracts' addresses",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "static links",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "record starting nonces",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "cloned contracts have no balances",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "Linked immutable setup",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "Constrain immutables",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                },
                {
                    "message": {
                        "text": "establish equivalence of extension and base contract immutables",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null
                }
            ],
            "jumpToDefinition": null
        },
        {
            "message": {
                "text": "uint256 sumNew",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
            ],
            "jumpToDefinition": {
                "file": "Cast.spec",
                "start": {
                    "line": 7,
                    "col": 5
                },
                "end": {
                    "line": 7,
                    "col": 20
                }
            }
        },
        {
            "message": {
                "text": "uint256 sumOld",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
            ],
            "jumpToDefinition": {
                "file": "Cast.spec",
                "start": {
                    "line": 8,
                    "col": 5
                },
                "end": {
                    "line": 8,
                    "col": 20
                }
            }
        },
        {
            "message": {
                "text": "uint256 newVal",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
            ],
            "jumpToDefinition": {
                "file": "Cast.spec",
                "start": {
                    "line": 9,
                    "col": 5
                },
                "end": {
                    "line": 9,
                    "col": 20
                }
            }
        },
        {
            "message": {
                "text": "uint256 oldVal",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
            ],
            "jumpToDefinition": {
                "file": "Cast.spec",
                "start": {
                    "line": 10,
                    "col": 5
                },
                "end": {
                    "line": 10,
                    "col": 20
                }
            }
        },
        {
            "message": {
                "text": "uint256 totVal",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
            ],
            "jumpToDefinition": {
                "file": "Cast.spec",
                "start": {
                    "line": 11,
                    "col": 5
                },
                "end": {
                    "line": 11,
                    "col": 20
                }
            }
        },
        {
            "message": {
                "text": "require sumNew == require_uint256(sumOld + newVal - oldVal)",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
                {
                    "message": {
                        "text": "sumNew == require_uint256(sumOld + newVal - oldVal) â†ª '{0}'",
                        "arguments": [
                            {
                                "value": "true",
                                "values": [
                                    "true"
                                ],
                                "tooltip": "value of expression",
                                "truncatable": false
                            }
                        ]
                    },
                    "status": "",
                    "childrenList": [
                        {
                            "message": {
                                "text": "sumNew â†ª '{0}'",
                                "arguments": [
                                    {
                                        "value": "0x8",
                                        "values": [
                                            "0x8",
                                            "8",
                                            "0x8"
                                        ],
                                        "tooltip": "value of expression",
                                        "truncatable": true
                                    }
                                ]
                            },
                            "status": "",
                            "childrenList": [
                            ],
                            "jumpToDefinition": {
                                "file": "Cast.spec",
                                "start": {
                                    "line": 12,
                                    "col": 13
                                },
                                "end": {
                                    "line": 12,
                                    "col": 19
                                }
                            }
                        },
                        {
                            "message": {
                                "text": "require_uint256(sumOld + newVal - oldVal) â†ª '{0}'",
                                "arguments": [
                                    {
                                        "value": "0x8",
                                        "values": [
                                            "0x8",
                                            "8",
                                            "0x8"
                                        ],
                                        "tooltip": "value of expression",
                                        "truncatable": true
                                    }
                                ]
                            },
                            "status": "",
                            "childrenList": [
                            ],
                            "jumpToDefinition": {
                                "file": "Cast.spec",
                                "start": {
                                    "line": 12,
                                    "col": 23
                                },
                                "end": {
                                    "line": 12,
                                    "col": 63
                                }
                            }
                        }
                    ],
                    "jumpToDefinition": {
                        "file": "Cast.spec",
                        "start": {
                            "line": 12,
                            "col": 13
                        },
                        "end": {
                            "line": 12,
                            "col": 64
                        }
                    }
                }
            ],
            "jumpToDefinition": {
                "file": "Cast.spec",
                "start": {
                    "line": 12,
                    "col": 5
                },
                "end": {
                    "line": 12,
                    "col": 65
                }
            }
        },
        {
            "message": {
                "text": "totVal = assert_uint256(sumOld + newVal - oldVal)",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
                {
                    "message": {
                        "text": "assert-cast check passed",
                        "arguments": [
                        ]
                    },
                    "status": "ASSERT CAST",
                    "childrenList": [
                        {
                            "message": {
                                "text": "sumOld + newVal - oldVal â†ª '{0}'",
                                "arguments": [
                                    {
                                        "value": "0x8",
                                        "values": [
                                            "0x8",
                                            "8",
                                            "0x8"
                                        ],
                                        "tooltip": "value of expression",
                                        "truncatable": true
                                    }
                                ]
                            },
                            "status": "",
                            "childrenList": [
                                {
                                    "message": {
                                        "text": "sumOld + newVal â†ª '{0}'",
                                        "arguments": [
                                            {
                                                "value": "0xb",
                                                "values": [
                                                    "0xb",
                                                    "11",
                                                    "0xb"
                                                ],
                                                "tooltip": "value of expression",
                                                "truncatable": true
                                            }
                                        ]
                                    },
                                    "status": "",
                                    "childrenList": [
                                        {
                                            "message": {
                                                "text": "sumOld â†ª '{0}'",
                                                "arguments": [
                                                    {
                                                        "value": "0x4",
                                                        "values": [
                                                            "0x4",
                                                            "4",
                                                            "0x4"
                                                        ],
                                                        "tooltip": "value of expression",
                                                        "truncatable": true
                                                    }
                                                ]
                                            },
                                            "status": "",
                                            "childrenList": [
                                            ],
                                            "jumpToDefinition": {
                                                "file": "Cast.spec",
                                                "start": {
                                                    "line": 13,
                                                    "col": 29
                                                },
                                                "end": {
                                                    "line": 13,
                                                    "col": 35
                                                }
                                            }
                                        },
                                        {
                                            "message": {
                                                "text": "newVal â†ª '{0}'",
                                                "arguments": [
                                                    {
                                                        "value": "0x7",
                                                        "values": [
                                                            "0x7",
                                                            "7",
                                                            "0x7"
                                                        ],
                                                        "tooltip": "value of expression",
                                                        "truncatable": true
                                                    }
                                                ]
                                            },
                                            "status": "",
                                            "childrenList": [
                                            ],
                                            "jumpToDefinition": {
                                                "file": "Cast.spec",
                                                "start": {
                                                    "line": 13,
                                                    "col": 38
                                                },
                                                "end": {
                                                    "line": 13,
                                                    "col": 44
                                                }
                                            }
                                        }
                                    ],
                                    "jumpToDefinition": {
                                        "file": "Cast.spec",
                                        "start": {
                                            "line": 13,
                                            "col": 29
                                        },
                                        "end": {
                                            "line": 13,
                                            "col": 44
                                        }
                                    }
                                },
                                {
                                    "message": {
                                        "text": "oldVal â†ª '{0}'",
                                        "arguments": [
                                            {
                                                "value": "0x3",
                                                "values": [
                                                    "0x3",
                                                    "3",
                                                    "0x3"
                                                ],
                                                "tooltip": "value of expression",
                                                "truncatable": true
                                            }
                                        ]
                                    },
                                    "status": "",
                                    "childrenList": [
                                    ],
                                    "jumpToDefinition": {
                                        "file": "Cast.spec",
                                        "start": {
                                            "line": 13,
                                            "col": 47
                                        },
                                        "end": {
                                            "line": 13,
                                            "col": 53
                                        }
                                    }
                                }
                            ],
                            "jumpToDefinition": {
                                "file": "Cast.spec",
                                "start": {
                                    "line": 13,
                                    "col": 29
                                },
                                "end": {
                                    "line": 13,
                                    "col": 53
                                }
                            }
                        }
                    ],
                    "jumpToDefinition": {
                        "file": "Cast.spec",
                        "start": {
                            "line": 13,
                            "col": 14
                        },
                        "end": {
                            "line": 13,
                            "col": 53
                        }
                    }
                }
            ],
            "jumpToDefinition": {
                "file": "Cast.spec",
                "start": {
                    "line": 13,
                    "col": 5
                },
                "end": {
                    "line": 13,
                    "col": 55
                }
            }
        },
        {
            "message": {
                "text": "assert false",
                "arguments": [
                ]
            },
            "status": "",
            "childrenList": [
                {
                    "message": {
                        "text": "Global State",
                        "arguments": [
                        ]
                    },
                    "status": "",
                    "childrenList": [
                    ],
                    "jumpToDefinition": null,
                    "storageId": null
                }
            ],
            "jumpToDefinition": {
                "file": "Cast.spec",
                "start": {
                    "line": 14,
                    "col": 5
                },
                "end": {
                    "line": 14,
                    "col": 43
                }
            }
        }
    ],
    "jumpToDefinition": null
}