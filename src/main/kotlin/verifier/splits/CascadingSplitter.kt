/*
 *     The Certora Prover
 *     Copyright (C) 2025  Certora Ltd.
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, version 3 of the License.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

package verifier.splits

import vc.data.CoreTACProgram

/**
 * Tries first splitters generated by [generators] in order. First one that says the result is splittable is
 * the one used for splitting.
 */
class CascadingSplitter(vararg generators : () -> Splitter) : Splitter {
    val generators = generators.toList()
    var splitter : Splitter? = null

    override fun splittable(actualTAC: CoreTACProgram): Boolean {
        for (g in generators) {
            val s = g()
            if (s.splittable(actualTAC)) {
                splitter = s
                return true
            }
        }
        return false
    }

    override fun split(actualTAC: CoreTACProgram) =
        splitter!!.split(actualTAC)
}
